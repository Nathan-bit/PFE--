<head>
    <head>
        <title>Etudiants</title>
        <%-include('./common/head') %>
        <!-- Your other CSS files -->
        <style>
            /* Card Styles */
            .card-title-custom {
                font-size: 16px;
                font-weight: bold;
                   text-align: center;
                text-transform: uppercase; 
                ;/* Add this line to make the text uppercase */
            }
  
            .card {
               
                border-radius:none;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
                transition: all 0.3s ease;
                width: auto; /* Set the desired width */
                height: fit-content; /* Set the desired height */
             /*    max-height: fit-content; */
                background-color:beige;
                margin: 10px;
                
            }
  
            .card:hover {
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
                transform: translateY(-5px);
               background-color: rgb(255, 255, 255)
            }
  
            .card-body {
                padding: 10px;
                height: 100%; /* Make the card-body take up the full height of the card */
                display: flex;
                flex-direction: column; /* Stack the content vertically */
            }
  
            .card-body > * {
                margin-bottom: 10px; /* Add some spacing between card elements */
            }
  
            .card-body > *:last-child {
                margin-bottom: 0; /* Remove the bottom margin from the last element */
            }
  
            /* Grid Container */
            #stageGrid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(400px, 1fr)); /* Minimum card width of 300px */
                grid-gap: 1px;
                grid-auto-rows: auto; /* Set the desired height for each row */
            }
         
  
            .mybtn {
                font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
                align-self: end;
                font-size: 15px;
                width: fit-content;
                height: auto;
            }
            .time-since-created {
                display: none;
            }
  /* 
            .card:hover .time-since-created {
                display: block;
            } */
        </style>
  
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    </head>
  </head>
  <body>
    <div class="custom-container">
        <%-include('./common/sidebar') %>
  
        <div class="main-content">
            <%-include('./common/navbar') %>
            <div style="text-align: center;">
                <h3 style="margin: 15px; padding: 15px;">Etudiant</h3>
            </div>
  
            <%-include('./partial/flaskMessages') %>
        
  
            <div class="">
                <ul class="nav nav-pills mb-3 d-flex justify-content-center" id="pills-tab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link btn-dark" id="pills-home-tab" data-bs-toggle="pill" data-bs-target="#pills-home" type="button" role="tab" aria-controls="pills-home" aria-selected="true">Home</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link btn-dark" id="pills-stage-tab" data-bs-toggle="pill" data-bs-target="#pills-stage" type="button" role="tab" aria-controls="pills-stage" aria-selected="false">Stage</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link btn-dark" id="pills-stage-postule-tab" data-bs-toggle="pill" data-bs-target="#pills-stage-postule" type="button" role="tab" aria-controls="pills-stage-postule" aria-selected="false">
                            Stage postulé
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link btn-dark" id="pills-resultat-tab" data-bs-toggle="pill" data-bs-target="#pills-resultat" type="button" role="tab" aria-controls="pills-resultat" aria-selected="false">Resultat</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link btn-dark" id="pills-profile-tab" data-bs-toggle="pill" data-bs-target="#pills-profile" type="button" role="tab" aria-controls="pills-profile" aria-selected="false">Profile</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link btn-dark" id="pills-contact-tab" data-bs-toggle="pill" data-bs-target="#pills-contact" type="button" role="tab" aria-controls="pills-contact" aria-selected="false">Contact</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link btn-dark" id="pills-disabled-tab" data-bs-toggle="pill" data-bs-target="#pills-disabled" type="button" role="tab" aria-controls="pills-disabled" aria-selected="false" disabled>
                            Disabled
                        </button>
                    </li>
                </ul>
                <hr />
                <div class="tab-content" id="pills-tabContent">
                    <!-- d-flex justify-content-center -->
                    <div class="tab-pane fade show active" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab" tabindex="0"></div>
                    <div class="tab-pane fade" id="pills-stage" role="tabpanel" aria-labelledby="pills-stage-tab" tabindex="0">
                        <div class="container">
                                <div class="filter-tab" style="margin: 10px;" >
                                    <form>
                                        <div class="row justify-content-center">
                                            <div class="col-md-2">
                                                <select class="form-select" id="domainFilter">
                                                    <option value="">Tous les domaines</option>
                                                    <!-- Populate options dynamically from the received data -->
                                                </select>
                                            </div>
                                            <div class="col-md-2">
                                                <select class="form-select" id="nomFilter">
                                                    <option value="">Tous les noms</option>
                                                    <!-- Populate options dynamically from the received data -->
                                                </select>
                                            </div>
                                            <div class="col-md-2">
                                                <select class="form-select" id="titreFilter">
                                                    <option value="">Tous les titres</option>
                                                    <!-- Populate options dynamically from the received data -->
                                                </select>
                                            </div>
                                            <div class="col-md-2">
                                                <select class="form-select" id="stateFilter">
                                                    <option value="">Tous les états</option>
                                                    <!-- Populate options dynamically from the received data -->
                                                </select>
                                            </div>
                                            <div class="col-md-2">
                                                <select class="form-select" id="sortFilter">
                                                    <option value="asc">Trier par date (Ascendant)</option>
                                                    <option value="desc">Trier par date (Descendant)</option>
                                                </select>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="search-bar input-group mb-3">
                                    <input type="text" class="form-control" id="searchInput" placeholder="Rechercher...">
                                </div>
                                <div id="stageGrid" class="row"></div>
                                <nav aria-label="Page navigation">
                                    <ul class="pagination justify-content-center" id="stagePagination">
                                        <!-- Pagination links will be added here dynamically -->
                                    </ul>
                                </nav>
                            
                           
                            <div id="stageGrid" class="row">
                        
                               <!-- Stage grid will be dynamically populated here -->
                            
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="pills-stage-postule" role="tabpanel" aria-labelledby="pills-stage-postule-tab" tabindex="0">
                        .stage postulé content..
                    </div>
                    <div class="tab-pane fade" id="pills-resultat" role="tabpanel" aria-labelledby="pills-resultat-tab" tabindex="0">.resultat content..</div>
                    <div class="tab-pane fade" id="pills-profile" role="tabpanel" aria-labelledby="pills-profile-tab" tabindex="0">.lol..</div>
                    <div class="tab-pane fade" id="pills-contact" role="tabpanel" aria-labelledby="pills-contact-tab" tabindex="0">.grgg..</div>
                    <div class="tab-pane fade" id="pills-disabled" role="tabpanel" aria-labelledby="pills-disabled-tab" tabindex="0">..grgrgreg.</div>
                </div>
            </div>
        </div>
        <%-include('./common/footer') %>
    </div>
    <!-- Scripts -->
    <!--   <script src="../public/js/script.js"></script> -->
    <!-- Include Bootstrap JS -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <%-include('./partial/etudiantTemplate/filterStage')  %> 
    <script>
        // Function to set active tab based on stored value
        function setActiveTab() {
            const activeTabId = localStorage.getItem("activeTabId");
            if (activeTabId) {
                const activeTab = document.querySelector(`#${activeTabId}`);
                if (activeTab) {
                    activeTab.classList.add("active");
                    const tabContentId = activeTab.getAttribute("aria-controls");
                    const tabContent = document.querySelector(`#${tabContentId}`);
                    if (tabContent) {
                        tabContent.classList.add("show", "active");
                    }
                }
            }
        }
  
        // Add event listener to each tab to store active tab in local storage
        document.querySelectorAll(".nav-link").forEach((tab) => {
            tab.addEventListener("click", function () {
                const tabId = this.getAttribute("id");
                localStorage.setItem("activeTabId", tabId);
            });
        });
  
        // Call the function to set the active tab on page load
        setActiveTab();
    </script>
  
  
    <script>
        // Define a function to fetch postulant data
        async function fetchPostulantData() {
            try {
                const response = await fetch("/etudiant/stage_postuler");
                if (!response.ok) {
                    throw new Error("Failed to fetch postulant data");
                }
                const data = await response.json();
                return data.postulant;
            } catch (error) {
                console.error("Error fetching postulant data:", error);
                return [];
            }
        }
  
        // Define a function to render postulant data in the tab
        async function renderPostulantTab() {
            const postulantTabPane = document.getElementById("pills-stage-postule");
            const postulantList = await fetchPostulantData();
  
            // Clear existing content
            postulantTabPane.innerHTML = "";
  
            // Render postulant data
            const container = document.createElement("div");
            container.classList.add("container", "mt-4");
            container.innerHTML = `
  <div class="container-cc">
  <h3 class="text-center">Listes des stages  Postulés</h3>
  
  <hr>
  <div class="row">
  ${postulantList
    .map(
        (postulant) => `
  <div class="col-md-4">
      <div class="card mb-4  animate__animated animate__fadeInUp"    style="background-color: white;">
  
          <div class="card-body">
              <h5 class="card-title card-title-custom  ">${postulant.etudiantName}</h5>
                <hr>
              <p class="card-text"><strong>Email :</strong> ${postulant.etudiantEmail}</p>
              <p class="card-text"><strong>Institue :</strong> ${postulant.etudiantInstitue}</p>
              <p class="card-text"><strong>Domaine :</strong> ${postulant.stageDomaine}</p>
              <p class="card-text"><strong>Section :</strong> ${postulant.etudiantSection}</p>
              <p class="card-text"><strong>Sujet :</strong> ${postulant.stageSujet}</p>
              <p class="card-text"><strong>Entreprise :</strong> ${postulant.entrepriseName}</p>
              <p class="card-text">
                   <strong>Status :</strong> 
                     <span style=" font-weight: bold;  color: 
                          ${postulant.status === "a attente" ? "rgb(200, 130, 30)" : postulant.status === "accepté" ? "green" : "red"}">
                           ${postulant.status}
                    </span>
              </p>
  
              <p class="card-text"><strong>Date de postulation :</strong> le ${postulant.postulatedAt}</p>
              <p class="card-text"><strong>CV :</strong> <a href="${postulant.CVPath}" target="_blank">Ouvrir CV</a></p>
              <a href="/etudiant/candidatures?etudiantEmail=${postulant.etudiantEmail}&stageId=${postulant.stageId}" class="btn btn-outline-secondary">View more Details</a>
          </div>
      </div>
  </div>
  `
    )
    .join("")}
  </div>
  </div>
  `;
            postulantTabPane.appendChild(container);
        }
  
        // Call the renderPostulantTab function when the page loads
        document.addEventListener("DOMContentLoaded", () => {
            renderPostulantTab();
        });
    </script>
  </body>
  