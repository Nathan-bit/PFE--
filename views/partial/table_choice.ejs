
  <style>
    #success-message {
        color: green;
    }
    
    #error-message {
        color: rgb(255, 0, 0);
    }
</style>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content  my-color">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Save Confirmation  
          <div id="success-message" style="display: none;"></div>
          <div id="error-message" style="display: none;"></div> 
        </h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
    

 <div class="progress" style="display: none;">
  <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%"></div>
</div>
       <div class="form-group">
        <label for="menu" style="display: inline-block; width: 200px;">choose table for save:</label>
               <select id="menu" class="form-control form-control-sm" style="width: 150px; display: inline-block;">   
            <option value="" selected disabled>Selectionner  la table</option>
            <% Object.keys(items).forEach(function(key) { %>
                <option value="<%= key %>"><%= key %></option>
            <% }); %>
        </select>
    </div>

        <div class="form-check">
          <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios1" value="2" checked>
          <label class="form-check-label" for="exampleRadios1">
          
           Ajouter les nouvelles et  mettre à jours les anciennes données
          </label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios2" value="1">
          <label class="form-check-label" for="exampleRadios2">
            Ajouter uniquement les nouvelles données
          </label>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <!-- Send button -->
        <button type="button" class="btn btn-success"  onclick="SaveAndSend()">Send</button>
      </div>
    </div>
  </div>
</div>

<script>
           $('#exampleModal').on('hidden.bs.modal', function () {
    // Clear the success and error messages
    $('#success-message').text('').hide();
    $('#error-message').text('').hide();
});


function SaveAndSend() {
    // Reset the progress bar to 0%
    $('.progress-bar').css('width', '0%').attr('aria-valuenow', 0);

    // Show the progress bar
    $('.progress').show();

    var data = saveTable();
    var options = getSelectedOption();
    var tableName = getSelectedValue();
    console.log("data before save", data);

    // Start updating the progress bar
    var progressInterval = setInterval(function() {
        var currentProgress = parseInt($('.progress-bar').attr('aria-valuenow'));
        if (currentProgress >= 100) {
            clearInterval(progressInterval);
        } else {
            currentProgress += 10; // Adjust this value to control the speed of the progress bar
            $('.progress-bar').css('width', currentProgress + '%').attr('aria-valuenow', currentProgress);
        }
    }, 100); // Adjust this value to control the speed of the progress bar

    $.ajax({
        url: '/files/saveToDatabase', // Replace with your server-side endpoint URL
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({
            Data: data,
            Options: options,
            TableName: tableName
        }),
        success: function (response) {
            // Hide the progress bar
            $('.progress').hide();

            // Check if the response contains a message
            if (response && response.message) {
                // Show success message
                $('#success-message').text("Success: " + response.message).show();
            } else {
                // Show generic success message if response does not contain a message
                $('#success-message').text("Success: Data saved successfully.").show();
            }
            // Hide error message if it's visible
            $('#error-message').hide();
        },
        error: function (xhr, status, error) {
            // Hide the progress bar
            $('.progress').hide();
            clearInterval(progressInterval); // Clear the progress bar interval

            // Check if the response contains an error
            if (xhr.responseJSON && xhr.responseJSON.error) {
                // Show error message
                var errorMessage = xhr.responseJSON.error;
                $('#error-message').text("Error: " + errorMessage).show();
            } else {
                // Show generic error message if response does not contain an error
                $('#error-message').text("Error: Failed to save data.").show();
            }
            // Hide success message if it's visible
            $('#success-message').hide();
        }
    });
}
    function getSelectedOption() {
        var selectedOption = document.querySelector('input[name="exampleRadios"]:checked').value;
        return selectedOption;
    }

    function getSelectedValue() {
        var menu = document.getElementById("menu");
        var selectedValue = menu.value;
        return selectedValue;
    }
</script>


